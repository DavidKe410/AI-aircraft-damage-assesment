Starting the Orin development with Jetpack 5.1.3:
1. Installed a new NVMe drive
2. Used Nvidia's sdkmanager on another Ubuntu amd64 computer to flash and install runtime/sdk components to the Orin. (Jetpack 5.1.3 w/ all runtime and sdk components installed)
- This video basically walks through it: https://www.youtube.com/watch?v=Ucg5Zqm9ZMk&t=90s
- Sdkmanager download: https://developer.nvidia.com/sdk-manager
3. Back on the Orin, sudo apt update && sudo apt upgrade
4. sudo apt install python3-pip
4. sudo pip3 install -U jetson-stats
5. restart and run jtop
  (Some erros may show up from Jetpack isntallation, install missing Jetpack components with these commands: https://developer.nvidia.com/embedded/learn/get-started-jetson-agx-orin-devkit)
    - Just housekeeping libraries and other stats
    -   CUDA: 11.4.315
    -   cuDNN: 8.6.0.166
    -   TensorRT: 8.5.2.2
    -   VPI: 2.4.8
    -   Vulkan: 1.3.204
    -   OpenCV: 4.5.4 with CUDA: NO
    -   Jetpack: 5.1.3
    -   Distr: Ubuntu 20.04 Focal
    -   Python: 3.8.10
    -   L4t: 35.5.0  
    -   Interfaces: 192.168.1.135, docker0: 172.17.0.1
6. Downloading ROS1 Noetic: https://wiki.ros.org/noetic/Installation/Ubuntu
    - Installed the desktop full, the dependencies that they mention, rosdep
7. Getting the FLIR IR camera up.
    - Make a workspace for the wrapper and enter: mkdir -p air_dmg_assesment_ws/src && cd air_dmg_assesment_ws/src
    - git clone https://github.com/astuff/flir_boson_usb
    - Exit from src to run rosdep: cd .. && rosdep install --from-paths src -y --ignore-src
      - Should download other resources like opencv if you didn't have them already
    - source /opt/ros/noetic/setup.bash
    - catkin_make
    - Checking funtionality
      - source devel/setup.bash
      - check usb video with ls /dev/video*
      - cd && roslaunch flir_boson_usb flir_boson.launch dev:=/dev/video0
        - switch video0 with your configuration
8. Starting the legacy Realsense ros wrapper (dpkg -l | grep "realsense" | cut -d " " -f 3 | xargs sudo dpkg --purge)
    - Started by following: https://github.com/IntelRealSense/librealsense/blob/master/doc/installation_jetson.md
      - For the 2nd step, I ran step 2 of this: https://developer.nvidia.com/embedded/learn/get-started-jetson-agx-orin-devkit
      - I chose step 4, installing with debian packages
    - Next, building the ros wrapper: https://github.com/IntelRealSense/realsense-ros/tree/ros1-legacy
      - SEEMS LIKE IN GENERAL THERE ARE A LOT OF PORBLEMS WITH REALSENSE AND JETSONS
              - To mitigate problems that may occur later on, I installed OpenCV with Cuda (4.6.0): https://github.com/AastaNV/JEP/blob/master/script/install_opencv4.6.0_Jetson.sh
                - For this script, remove the installation of v4l2ucp and it hsould be good, though it will take some time
                - Then did this to make sure everything was still intact: sudo apt install ros-noetic-desktop-full
                - sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade
                - sudo apt-get install libssl-dev libusb-1.0-0-dev libudev-dev pkg-config libgtk-3-dev
                - sudo apt-get install libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev at
      - To start, just cloned in home: git clone https://github.com/IntelRealSense/librealsense.git
          - cd librealsense && ./scripts/setup_udev_rules.sh
          - mkdir build && cd build
          - cmake .. -DBUILD_EXAMPLES=true -DCMAKE_BUILD_TYPE=release -DFORCE_RSUSB_BACKEND=false -DBUILD_WITH_CUDA=true
          - make -j$(($(nproc)-1))
      - cd ~/air_dmg_assesment_ws/src && git clone https://github.com/IntelRealSense/realsense-ros.git -b ros1-legacy
      - cd realsense-ros/
      - git checkout `git tag | sort -V | grep -P "^2.\d+\.\d+" | tail -1`
      - cd ../..
      - source devel/setup.bash && catkin_make
      - source again for good measure
7. Starting with the Arducam ToF
    - Simply followed the online Arducam ToF guide:
    - Make sure to source humble before colcon building
    - source Arducam_tof_camera/ros2_publisher/install/setup.bash
          - when running: ros2 run arducam tof_pointcloud
